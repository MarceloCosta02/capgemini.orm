// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiorm.Repository.Context;

namespace apiorm.Migrations
{
    [DbContext(typeof(PetShopContext))]
    partial class PetShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("apiorm.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("apiorm.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCane")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetshopId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("PetshopId")
                        .IsUnique();

                    b.ToTable("Company");
                });

            modelBuilder.Entity("apiorm.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetshopId")
                        .HasColumnType("int");

                    b.HasKey("PetId");

                    b.HasIndex("PetshopId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("apiorm.Models.PetShop", b =>
                {
                    b.Property<int>("PetShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetShopId");

                    b.ToTable("PetShop");
                });

            modelBuilder.Entity("apiorm.Models.PetShopClient", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("PetshopId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "PetshopId");

                    b.HasIndex("PetshopId");

                    b.ToTable("PetShopClient");
                });

            modelBuilder.Entity("apiorm.Models.Company", b =>
                {
                    b.HasOne("apiorm.Models.PetShop", "PetShop")
                        .WithOne("Company")
                        .HasForeignKey("apiorm.Models.Company", "PetshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiorm.Models.Pet", b =>
                {
                    b.HasOne("apiorm.Models.PetShop", "PetShop")
                        .WithMany("Pets")
                        .HasForeignKey("PetshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiorm.Models.PetShopClient", b =>
                {
                    b.HasOne("apiorm.Models.Client", "Client")
                        .WithMany("PetShopClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiorm.Models.PetShop", "PetShop")
                        .WithMany("PetShopClients")
                        .HasForeignKey("PetshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
